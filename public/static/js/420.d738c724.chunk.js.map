{"version":3,"file":"static/js/420.d738c724.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceItem.css';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { PLACE_ID, SERVER_URL_BASE } from '../../shared/util/Constans';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n\nconst PlaceItem = props => {\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient()\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        SERVER_URL_BASE+PLACE_ID+props.id, \n        'DELETE',\n        null,\n        {\n          Authorization: `Bearer ${auth.token}`\n        }\n      )\n      props.onDelete(props.id)\n    } catch (error) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onclear={clearError}/>\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay/>}\n          <div className=\"place-item__image\">\n            <img src={SERVER_URL_BASE + props.image} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Create a Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place._id}\n          id={place._id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { GET_USER_PLACES, SERVER_URL_BASE } from '../../shared/util/Constans';\n\nconst UserPlaces = () => {\n  const userId = useParams().userId\n  const {isLoading, error, sendRequest, clearError} = useHttpClient()\n  const [userPlaces, setUserPlaces] = useState([])\n  \n  useEffect(() => {\n    const getAllUserPlaces = async () => {\n      try {\n        const places = await sendRequest(\n          SERVER_URL_BASE+GET_USER_PLACES+userId)\n        setUserPlaces(places)\n      } catch (error) {}\n    }\n    getAllUserPlaces()\n  }, [sendRequest, userId])\n\n  const deletedHandler = deletedId => {\n    setUserPlaces(prevPlaces => \n      prevPlaces.filter(place => \n        place._id !== deletedId))\n  }\n\n  return (\n    <React.Fragment>\n      {isLoading && (\n          <div className=\"center\">\n            <LoadingSpinner />\n          </div>\n      )}\n      {!isLoading && userPlaces && \n        <PlaceList items={userPlaces} onDelete={deletedHandler} />}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","Map","current","Marker","position","_jsx","ref","className","concat","style","auth","useContext","AuthContext","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","isLoading","error","sendRequest","clearError","useHttpClient","closeMapHandler","cancelDeleteHandler","_jsxs","React","children","ErrorModal","onclear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","async","SERVER_URL_BASE","PLACE_ID","id","Authorization","token","onDelete","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","items","length","place","PlaceItem","_id","creator","location","UserPlaces","useParams","userPlaces","setUserPlaces","places","GET_USER_PLACES","getAllUserPlaces","PlaceList","deletedId","prevPlaces","filter"],"sourceRoot":""}